@* @model IEnumerable<MarginViewModel> *@
@model MVCWebApp.Helper.PaginatedList<MarginViewModel>

@{
    ViewBag.Title = "Manage Margins";
    int currentPageSize = ViewData["CurrentPageSize"] as int? ?? Model.PageSize;
}

<div class="container">
    <h2>@ViewBag.Title</h2>

    <p>
        Username: @ViewBag.Username
        Email: @ViewBag.Email
    </p>

    <p>
        <button type="button" class="btn btn-primary" id="btnCreate">Create</button>
        @Html.ActionLink("Sign out", "Logout")
    </p>

    <form asp-action="Index" method="get" class="form-inline mb-3">
        <label for="pageSize" class="mr-2">Items per page:</label>
        <select id="pageSize" name="pageSize" class="form-control" onchange="this.form.submit()">
            @if (currentPageSize == 5)
            {
                <option value="5" selected>5</option>
            }
            else
            {
                <option value="5">5</option>
            }

            @if (currentPageSize == 10)
            {
                <option value="10" selected>10</option>
            }
            else
            {
                <option value="10">10</option>
            }

            @if (currentPageSize == 20)
            {
                <option value="20" selected>20</option>
            }
            else
            {
                <option value="20">20</option>
            }

            @if (currentPageSize == 50)
            {
                <option value="50" selected>50</option>
            }
            else
            {
                <option value="50">50</option>
            }
        </select>
        <input type="hidden" name="pageNumber" value="1" />
    </form>

    <ul>
        <li>Total Pages: @Model.TotalPages</li>
        <li>Items Per Page: @Model.PageSize</li>
    </ul>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table id="myDataTable" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Username</th>
                        <th>Percentage</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.ID</td>
                            <td>@item.Username</td>
                            <td>@item.Percentage%</td>
                            <td class="text-right">
                                <button class="btn btn-sm btn-warning btn-edit" data-id="@item.ID">Edit</button>
                                <button class="btn btn-sm btn-info btn-detail" data-id="@item.ID">Details</button>
                                <button class="btn btn-sm btn-danger btn-delete" data-id="@item.ID">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Pagination Links -->
            <div class="d-flex justify-content-between">
                @if (Model.HasPreviousPage)
                {
                    <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-pageSize="@Model.PageSize"
                       class="btn btn-primary">Previous</a>
                }
                @if (Model.HasNextPage)
                {
                    <a asp-action="Index"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-pageSize="@Model.PageSize"
                       class="btn btn-primary">Next</a>
                }
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info">
            <strong>No Items Found</strong>
            <p>There are no items to display.</p>
        </div>
    }


    <!-- Modal Container -->
    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- The create form will be loaded here via AJAX -->
            </div>
        </div>
    </div>

    <!-- Edit Modal Container -->
    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- The edit form partial view will be loaded here -->
            </div>
        </div>
    </div>

    <!-- Detail Modal Container -->
    <div class="modal fade" id="detailModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- The detail form partial view will be loaded here -->
            </div>
        </div>
    </div>

    <!-- Delete Modal Container -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- The delete form partial view will be loaded here -->
            </div>
        </div>
    </div>
</div>

@* Include DataTables CSS and JS (CDN) *@
@section scripts {
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.js"></script>

    <script>
        $(document).ready(function () {
            var table = $('#myDataTable').DataTable({
                "columns": [
                    { "data": "id" },
                    { "data": "username" },
                    { "data": "percentage" },
                    { "data": "actionString" },
                    //{}
                ],
                // Enable features
                // "paging": true,   // Enable pagination
                "ordering": true, // Enable sorting
                "searching": true,  // Enable searching
                // "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]], // Customize page length options
                // "pageLength": 2, // Default page length
                // Optionally, customize the text:
                "language": {
                    "emptyTable": "No data available in table",
                    "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "infoEmpty": "Showing 0 to 0 of 0 entries",
                    "infoFiltered": "(filtered from _MAX_ total entries)",
                    "infoPostFix": "",
                    "thousands": ",",
                    // "lengthMenu": "Show _MENU_ entries",
                    "loadingRecords": "Loading...",
                    "processing": "Processing...",
                    "search": "Search:",
                    "zeroRecords": "No matching records found",
                    // "paginate": {
                    //     "first": "First",
                    //     "last": "Last",
                    //     "next": "Next",
                    //     "previous": "Previous"
                    // },
                    "aria": {
                        "sortAscending": ": activate to sort column ascending",
                        "sortDescending": ": activate to sort column descending"
                    },
                    "select": {
                        "rows": {
                            "_": "Selected %d rows",
                            "0": "Click a row to select it",
                            "1": "Selected 1 row"
                        }
                    }
                }
            });

            function getMargins() {
                $.ajax({
                    url: "/Margin/GetMargins",  // Controller method URL
                    type: "GET",
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                        //table.clear().rows.add(data).draw(); // 🔥 Refreshes DataTable!

                        var tableBody = $("#myDataTable tbody");
                        tableBody.empty(); // Clear existing rows

                        // $.each(data, function (index, margin) {
                        //     var actionButtons = `
                        //             <td class="text-right">
                        //                         <button class="btn btn-sm btn-warning btn-edit" data-id="${margin.id}">Edit</button>
                        //                         <button class="btn btn-sm btn-info btn-detail" data-id="${margin.id}">Details</button>
                        //                         <button class="btn btn-sm btn-danger btn-delete" data-id="${margin.id}">Delete</button>
                        //             </td>
                        //         `;
                        //     tableBody.append(`
                        //             <tr>
                        //                         <td>${margin.id}</td>
                        //                         <td>${margin.username}</td>
                        //                         <td>${margin.percentage}</td>
                        //                         ${actionButtons}
                        //             </tr>
                        //         `);
                        // });

                        $.each(data, function (index, margin) {
                            var actionButtons = `
                                                    <td class="text-right">
                                                                <button class="btn btn-sm btn-warning btn-edit" data-id="${margin.id}">Edit</button>
                                                                <button class="btn btn-sm btn-info btn-detail" data-id="${margin.id}">Details</button>
                                                                <button class="btn btn-sm btn-danger btn-delete" data-id="${margin.id}">Delete</button>
                                                    </td>
                                                `;

                            margin.actionString = actionButtons;
                        });

                        console.log(data);

                        table.clear().rows.add(data).draw(); // 🔥 Refreshes DataTable!
                    },
                    error: function () {
                        alert("Error loading data!");
                    }
                });
            }

            /*-------------------------- Create */

            // When the Create button is clicked, load the partial view via GET
            $("#btnCreate").click(function (e) {
                e.preventDefault();
                $.get("/Margin/Create")
                    .done(function (data, textStatus, jqXHR) {
                        console.log("Success:", jqXHR.status); // Logs HTTP status code (e.g., 200)
                        $("#createModal .modal-content").html(data);
                        $("#createModal").modal("show");
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.log("Error:", jqXHR.status);  // Logs error status (e.g., 404, 500)
                        alert("Failed to load. Status: " + jqXHR.status);
                        window.location.href = "/Login/Index";
                    });
            });

            // Use event delegation to handle the form submission inside the modal
            $("#createModal").on("submit", "form", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        // Assuming that on successful creation you return a JSON flag.
                        if (result.success) {
                            // Optionally update your listing here using AJAX
                            $("#createModal").modal("hide");
                            // For example, you could reload a partial view or simply refresh:
                            //location.reload();
                            getMargins();
                        } else {
                            // If server returns the form with errors, re-render it in the modal
                            $("#createModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Submission error: " + error);
                        alert("Failed to load. Status: " + xhr.status);
                        window.location.href = "/Login/Index";
                    }
                });
            });

            /*-------------------------- Edit */
            $(document).on("click", ".btn-edit", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");

                $.get("/Margin/Edit", { id: entityId }, function (data) {
                    $("#editModal .modal-content").html(data);
                    $("#editModal").modal("show");
                });
            });

            // $(".btn-edit").click(function (e) {
            //     e.preventDefault();
            //     var entityId = $(this).data("id");
            //     $.get("/Margin/Edit", { id: entityId }, function (data) {
            //         $("#editModal .modal-content").html(data);
            //         $("#editModal").modal("show");
            //     });
            // });

            // Delegate the form submission inside the modal; using a dynamic event handler
            $("#editModal").on("submit", "form", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#editModal").modal("hide");
                            // Optionally update your listing via AJAX or refresh the portion of your list
                            getMargins();
                        } else {
                            // Re-render the form with validation errors when needed
                            $("#editModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });

            /*-------------------------- Detail */
            $(document).on("click", ".btn-detail", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/Margin/Details", { id: entityId }, function (data) {
                    $("#detailModal .modal-content").html(data);
                    $("#detailModal").modal("show");
                });
            });

            /*-------------------------- Delete */
            $(document).on("click", ".btn-delete", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/Margin/Delete", { id: entityId }, function (data) {
                    $("#deleteModal .modal-content").html(data);
                    $("#deleteModal").modal("show");
                });
            });

            // Delegate the form submission inside the modal; using a dynamic event handler
            $("#deleteModal").on("submit", "form", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#deleteModal").modal("hide");
                            // Optionally update your listing via AJAX or refresh the portion of your list
                            getMargins();
                        } else {
                            // Re-render the form with validation errors when needed
                            $("#deleteModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });
        });
    </script>
}

