@* @model IEnumerable<MarginViewModel> *@
@model MVCWebApp.Models.Req.MarginSearchReq

@{
    ViewBag.Title = "Manage Margins";
}

@section scripts {
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.js"></script>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- jQuery Validation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/additional-methods.min.js"></script>
}

<div class="container">
    <h2>@ViewBag.Title</h2>

    <p>
        <div class="text-end">
            Login: @ViewBag.Username
        </div>
        <div class="text-end mt-2">
            @* <button>@Html.ActionLink("Sign out", "Logout")</button> *@
            @Html.ActionLink("Sign Out", "Logout", "Margin", null, new { @class = "btn btn-danger" })

        </div>
        @* Email: @ViewBag.Email *@
    </p>

    @* <p>
        @Html.ActionLink("Sign out", "Logout")
    </p> *@

    <!-- Search Section -->
    @* <section id="searchSection" class="p-4 border border-primary rounded bg-light shadow-sm"> *@
    <section id="searchSection" class="p-4 border rounded bg-light shadow-sm">
        <h4>Search Margins</h4>

        <div class="d-flex gap-1">
            <div class="form-group">
                <label for="Username">Username</label>
                <input type="text" name="Username" id="Username" class="form-control" value="@Model?.Username" placeholder="Enter username">
            </div>

            <div class="form-group">
                <label for="Percentage">Percentage (%)</label>
                <input type="number" name="Percentage" id="Percentage" class="form-control" value="@Model?.Percentage" min="0" max="100" placeholder="0">
            </div>
        </div>

        <div class="d-flex gap-1 mt-2">
            <div>
                <label for="pageSize" class="mr-2">Items per page</label>
                <select id="optionPageSize" class="form-control">
                    @if (@Model.PageSize == 5)
                    {
                        <option value="5" selected>5</option>
                    }
                    else
                    {
                        <option value="5">5</option>
                    }

                    @if (@Model.PageSize == 10)
                    {
                        <option value="10" selected>10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }

                    @if (@Model.PageSize == 20)
                    {
                        <option value="20" selected>20</option>
                    }
                    else
                    {
                        <option value="20">20</option>
                    }

                    @if (@Model.PageSize == 50)
                    {
                        <option value="50" selected>50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }
                </select>

                <input type="hidden" id="pageIndex" value="@Model.PageNumber" />
                <input type="hidden" id="pageSize" value="@Model.PageSize" />
            </div>
        </div>

        @* <div>
            <label for="pageSize" class="mr-2">Items per page:</label>
            <select id="optionPageSize" class="form-control">
                @if (@Model.PageSize == 5)
                {
                    <option value="5" selected>5</option>
                }
                else
                {
                    <option value="5">5</option>
                }

                @if (@Model.PageSize == 10)
                {
                    <option value="10" selected>10</option>
                }
                else
                {
                    <option value="10">10</option>
                }

                @if (@Model.PageSize == 20)
                {
                    <option value="20" selected>20</option>
                }
                else
                {
                    <option value="20">20</option>
                }

                @if (@Model.PageSize == 50)
                {
                    <option value="50" selected>50</option>
                }
                else
                {
                    <option value="50">50</option>
                }
            </select>

            <input type="hidden" id="pageIndex" value="@Model.PageNumber" />
            <input type="hidden" id="pageSize" value="@Model.PageSize" />
        </div> *@

        <br />

        <div class="d-flex gap-2 mt-2">
            <button id="btnSearch" type="submit" class="btn btn-primary">Search</button>
            <button id="btnClear" class="btn btn-dark">Clear</button>
            <button type="button" class="btn btn-success" id="btnCreate">Create</button>
            @* <button type="button" class="btn btn-primary" id="btnCreate">Create</button> *@
        </div>

        <div class="d-flex gap-2 mt-2">
            @* <button id="btnSearch" type="submit" class="btn btn-primary">Search</button> *@
            @* <button type="button" class="btn btn-success" id="btnCreate">Create</button> *@
        </div>

        <!-- Modal Container -->
        <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <!-- The create form will be loaded here via AJAX -->
                </div>
            </div>
        </div>

    </section>



    @* <form id="searchForm" asp-action="Index" method="get">
    <div class="form-group">
    <label for="Username">Username</label>
    <input type="text" name="Username" id="Username" class="form-control" value="@Model?.Username" placeholder="Enter username">
    </div>

    <div class="form-group">
    <label for="Percentage">Percentage</label>
    <input type="number" name="Percentage" id="Percentage" class="form-control" value="@Model?.Percentage" min="0" max="100" placeholder="Enter percentage">
    </div>

    <button type="submit" class="btn btn-primary">Search</button>
    </form> *@

    <hr> <!-- Divider -->

    <section id="results" class="p-4 border rounded bg-white shadow-sm">

        <!-- Results section -->
        <div id="results">
            @* @await Html.PartialAsync("_Search", Model) *@
        </div>
    </section>

    <script>
        $(document).ready(function () {

            $("#btnSearch").click(function (e) {
                event.preventDefault(); // Prevent full page reload

                postGetMargins(1)
            });

            /*=================================================== Pagination*/
            $(document).on("click", "#btnGo", function (e) {
                //$("#btnCreate").click(function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndexNew").val()

                postGetMargins(pageNumber)
            });

            $(document).on("click", "#btnNext", function (e) {
                //$("#btnCreate").click(function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndex").val() + 1

                postGetMargins(pageNumber)


                // var requestData = {
                //     // Username: $("#Username").val(),
                //     // Percentage: $("#Percentage").val(),
                //     PageNumber: pageNumber, // Default to first page
                //     PageSize: 5
                // };

                // $.ajax({
                //     url: "/Margin/PostSearchMargins",
                //     type: "POST",
                //     contentType: "application/json",
                //     data: JSON.stringify(requestData),
                //     success: function (data) {
                //         $("#results").html(data); // Update results dynamically
                //     },
                //     error: function (jqXHR) {
                //         console.error("Error:", jqXHR.status);
                //         alert("Search failed. Please try again.");
                //     }
                // });
            });

            $(document).on("click", "#btnPrevious", function (e) {
                //$("#btnCreate").click(function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndex").val() - 1

                postGetMargins(pageNumber)
            });

            // $(document).on("click", "#btnPrevious", function (e) {
            //     //$("#btnCreate").click(function (e) {
            //     event.preventDefault(); // Prevent full page reload

            //     var pageNumber = +$("#pageIndex").val() - 1

            //     var requestData = {
            //         // Username: $("#Username").val(),
            //         // Percentage: $("#Percentage").val(),
            //         PageNumber: pageNumber, // Default to first page
            //         PageSize: 5
            //     };

            //     $.ajax({
            //         url: "/Margin/PostSearchMargins",
            //         type: "POST",
            //         contentType: "application/json",
            //         data: JSON.stringify(requestData),
            //         success: function (data) {
            //             $("#results").html(data); // Update results dynamically
            //         },
            //         error: function (jqXHR) {
            //             console.error("Error:", jqXHR.status);
            //             alert("Search failed. Please try again.");
            //         }
            //     });
            // });

            $(document).on("change", "#optionPageSize", function (e) {
                event.preventDefault(); // Prevent full page reload

                postGetMargins(1)
            });

            function postGetMargins(pageNumber) {

                var requestData = {
                    Username: $("#Username").val(),
                    // Percentage: $("#Percentage").val(),
                    Percentage: parseInt($("#Percentage").val(), 0),
                    PageNumber: pageNumber, // Default to first page
                    PageSize: +$("#optionPageSize").val()
                };

                $.ajax({
                    url: "/Margin/PostSearchMargins",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(requestData),
                    success: function (data) {
                        $("#pageIndex").val(pageNumber)
                        $("#results").html(data); // Update results dynamically
                    },
                    error: function (jqXHR) {
                        console.error("Error:", jqXHR.status);
                        alert("Search failed. Please try again.");
                    }
                });
            }

            // function getMargins() {
            //     $.ajax({
            //         url: "/Margin/GetMargins",  // Controller method URL
            //         type: "GET",
            //         dataType: "json",
            //         success: function (data) {
            //             console.log(data);
            //             //table.clear().rows.add(data).draw(); // 🔥 Refreshes DataTable!

            //             var tableBody = $("#myDataTable tbody");
            //             tableBody.empty(); // Clear existing rows

            //             $.each(data, function (index, margin) {
            //                 var actionButtons = `
            //                                                 <td class="text-right">
            //                                                             <button class="btn btn-sm btn-warning btn-edit" data-id="${margin.id}">Edit</button>
            //                                                             <button class="btn btn-sm btn-info btn-detail" data-id="${margin.id}">Details</button>
            //                                                             <button class="btn btn-sm btn-danger btn-delete" data-id="${margin.id}">Delete</button>
            //                                                 </td>
            //                                             `;

            //                 margin.actionString = actionButtons;
            //             });

            //             console.log(data);

            //             table.clear().rows.add(data).draw(); // 🔥 Refreshes DataTable!
            //         },
            //         error: function () {
            //             alert("Error loading data!");
            //         }
            //     });
            // }

            /*-------------------------- Create */

            // When the Create button is clicked, load the partial view via GET
            $(document).on("click", "#btnCreate", function (e) {
                //$("#btnCreate").click(function (e) {
                e.preventDefault();
                $.get("/Margin/Create")
                    .done(function (data, textStatus, jqXHR) {
                        console.log("Success:", jqXHR.status); // Logs HTTP status code (e.g., 200)
                        $("#createModal .modal-content").html(data);
                        $("#createModal").modal("show");
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.log("Error:", jqXHR.status);  // Logs error status (e.g., 404, 500)
                        alert("Failed to load. Status: " + jqXHR.status);
                        window.location.href = "/Login/Index";
                    });
            });

            // Use event delegation to handle the form submission inside the modal
            // $("#createModal").on("submit", "form", function (e) {
            //     e.preventDefault();

            //     var form = $(this);
            //     $.ajax({
            //         url: form.attr("action"),
            //         type: form.attr("method"),
            //         data: form.serialize(),
            //         success: function (result) {
            //             // Assuming that on successful creation you return a JSON flag.
            //             if (result.success) {
            //                 console.log(result);
            //                 // Optionally update your listing here using AJAX
            //                 $("#createModal").modal("hide");
            //                 // For example, you could reload a partial view or simply refresh:
            //                 //location.reload();
            //                 postGetMargins(1);
            //                 console.log('createModal calling postGetMargins');
            //             } else {
            //                 // If server returns the form with errors, re-render it in the modal
            //                 $("#createModal .modal-content").html(result);
            //             }
            //         },
            //         error: function (xhr, status, error) {
            //             console.error("Submission error: " + error);
            //             alert("Failed to load. Status: " + xhr.status);
            //             window.location.href = "/Login/Index";
            //         }
            //     });
            // });

            $(document).on("submit", "#createForm", function (e) {
                e.preventDefault();

                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        // Assuming that on successful creation you return a JSON flag.
                        if (result.success) {
                            console.log(result);
                            // Optionally update your listing here using AJAX
                            $("#createModal").modal("hide");
                            // For example, you could reload a partial view or simply refresh:
                            //location.reload();
                            alert('success create');
                            postGetMargins(1);
                        } else {
                            // If server returns the form with errors, re-render it in the modal
                            $("#createModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Submission error: " + error);
                        alert("Failed to load. Status: " + xhr.status);
                        window.location.href = "/Login/Index";
                    }
                });
            });

            /*-------------------------- Edit */
            $(document).on("click", ".btn-edit", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");

                $.get("/Margin/Edit", { id: entityId }, function (data) {
                    $("#editModal .modal-content").html(data);
                    $("#editModal").modal("show");
                });
            });

            // Delegate the form submission inside the modal; using a dynamic event handler
            $(document).on("submit", "#editForm", function (e) {
                // $("#editModal").on("submit", "form", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#editModal").modal("hide");
                            // Optionally update your listing via AJAX or refresh the portion of your list
                            alert('success edit');
                            postGetMargins(1);

                        } else {
                            // Re-render the form with validation errors when needed
                            $("#editModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });

            /*-------------------------- Detail */
            $(document).on("click", ".btn-detail", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/Margin/Details", { id: entityId }, function (data) {
                    $("#detailModal .modal-content").html(data);
                    $("#detailModal").modal("show");
                });
            });

            /*-------------------------- Delete */
            $(document).on("click", ".btn-delete", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/Margin/Delete", { id: entityId }, function (data) {
                    $("#deleteModal .modal-content").html(data);
                    $("#deleteModal").modal("show");
                });
            });

            // Delegate the form submission inside the modal; using a dynamic event handler
            $(document).on("submit", "#deleteForm", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#deleteModal").modal("hide");
                            alert('success delete');
                            postGetMargins(1);
                        } else {
                            // Re-render the form with validation errors when needed
                            $("#deleteModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });
        });
    </script>
</div>
