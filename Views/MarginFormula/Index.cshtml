@model MarginFormulaSearchReq

@{
    ViewBag.Title = "Manage Formula";
}

@section scripts {
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.js"></script>

    <!-- jQuery & Bootstrap -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/smoothness/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- jQuery Validation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/additional-methods.min.js"></script>
}

<div class="container">
    <h2>@ViewBag.Title</h2>

    <hr> <!-- Divider -->
    <div class="d-flex gap-2 mt-2">
        <button id="btnShowHideSearch" type="submit" class="btn btn-primary">Open Filter</button>
        <button type="button" class="btn btn-success" id="btnCreate">Create</button>
    </div>
    <hr> <!-- Divider -->
    <!-- Search Section -->
    <section id="searchSection" style="display: none;" class="p-4 border rounded bg-light shadow-sm">
        <h4>Search Margin Formula</h4>

        <div class="d-flex gap-1">
            <div class="form-group">
                <label asp-for="TypeSelections" class="control-label"></label>
                    <select id="optionTypeSelections" class="form-control" asp-items="@Model?.TypeSelections">
                    </select>
                <input asp-for="Type" class="form-control" hidden />
            </div>
            <div class="form-group">
                <label for="MarginType">Name</label>
                <input type="text" name="FormulaName" id="FormulaName" class="form-control" value="@Model?.Name" placeholder="Enter Name">
            </div>
            <div class="form-group">
                <label for="MarginFormula">Formula</label>
                <input type="text" name="Formula" id="Formula" class="form-control" value="@Model?.Formula" placeholder="Enter Formula">
            </div>
            <div class="form-group">
                <label for="CreatedBy">CreatedBy</label>
                <input type="text" name="CreatedBy" id="CreatedBy" class="form-control" value="@Model?.CreatedBy" placeholder="Enter CreatedBy">
            </div>
            <div class="form-group">
                <label for="ModifiedBy">ModifiedBy</label>
                <input type="text" name="ModifiedBy" id="ModifiedBy" class="form-control" value="@Model?.ModifiedBy" placeholder="Enter ModifiedBy">
            </div>
        </div>

        <div class="d-flex gap-1 mt-2">
            <div class="form-group">
                <label>Select Date Type</label>
                <div class="d-flex gap-1">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="allDatetime" name="dateType" value="AllDatetime" checked>
                        <label class="form-check-label" for="allDatetime">All</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="createdDate" name="dateType" value="CreatedDate">
                        <label class="form-check-label" for="createdDate">Created Date</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="modifiedDate" name="dateType" value="ModifiedDate">
                        <label class="form-check-label" for="modifiedDate">Modified Date</label>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex gap-1 mt-2">
            <div class="form-group">
                <label>From Date</label>
                <input type="date" id="dateTimeFrom" class="form-control">
            </div>
            <div class="form-group">
                <label>To Date</label>
                <input type="date" id="dateTimeTo" class="form-control">
            </div>
            <div class="form-group ms-2 mt-4">
                <button id="btnCurrentMonth" class="btn btn-primary">Current Month</button>
                <button id="btnPrevMonth" class="btn btn-primary">Prev Month</button>
                <button id="btnNextMonth" class="btn btn-primary">Next Month</button>
            </div>
        </div>

        <div class="d-flex gap-1 mt-2">
            <div>
                <label for="pageSize" class="mr-2">Items per page</label>
                <select id="optionPageSize" class="form-control">
                    @if (@Model.PageSize == 5)
                    {
                        <option value="5" selected>5</option>
                    }
                    else
                    {
                        <option value="5">5</option>
                    }

                    @if (@Model.PageSize == 10)
                    {
                        <option value="10" selected>10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }

                    @if (@Model.PageSize == 20)
                    {
                        <option value="20" selected>20</option>
                    }
                    else
                    {
                        <option value="20">20</option>
                    }

                    @if (@Model.PageSize == 50)
                    {
                        <option value="50" selected>50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }
                </select>

                <input type="hidden" id="pageIndex" value="@Model.PageNumber" />
                <input type="hidden" id="pageSize" value="@Model.PageSize" />
            </div>
        </div>

        <br />

        <div class="d-flex gap-2 mt-2">
            <button id="btnSearch" type="submit" class="btn btn-primary">Search</button>
            <button id="btnClear" class="btn btn-dark">Clear</button>
        </div>

    </section>

    <!-- Modal Container -->
    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
            </div>
        </div>
    </div>

    <hr> <!-- Divider -->

    <section id="results" class="p-4 border rounded bg-white shadow-sm">
        <div id="results">
        </div>
    </section>

    <script>
        $(document).ready(function () {

            /*-------------------------- Show Hide Search */
            $(document).on("click", "#btnShowHideSearch", function (e) {

                $('#searchSection').toggle();

                // Optional: Change button text
                const isVisible = $('#searchSection').is(':visible');
                $(this).text(isVisible ? 'Hide Search Section' : 'Show Search Section');
            });

            /*-------------------------- Datetime selection */
            $(document).on("click", "#btnCurrentMonth", function (e) {

                let [year, month] = $("#dateTimeFrom").val().split("-");
                let previousMonth = new Date(year, month - 2, 1); // -2 because months are 0-based

                let now = new Date();
                let firstDay = new Date(now.getFullYear(), now.getMonth(), 1).toLocaleDateString('en-CA'); // YYYY-MM-DD format;
                let lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0).toLocaleDateString('en-CA');
                // let lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0).toISOString().split("T")[0];

                $("#dateTimeFrom").val(firstDay);
                $("#dateTimeTo").val(lastDay);
            });

            $(document).on("click", "#btnPrevMonth", function (e) {

                let [year, month] = $("#dateTimeFrom").val().split("-");
                let previousMonth = new Date(year, month - 2, 1); // -2 because months are 0-based

                let now = new Date();
                let firstDay = previousMonth.toLocaleDateString('en-CA'); // YYYY-MM-DD format;
                let lastDay = new Date(previousMonth.getFullYear(), previousMonth.getMonth() + 1, 0).toLocaleDateString('en-CA').split("T")[0];

                $("#dateTimeFrom").val(firstDay);
                $("#dateTimeTo").val(lastDay);
            });

            $(document).on("click", "#btnNextMonth", function (e) {

                let [year, month] = $("#dateTimeFrom").val().split("-");
                let nextMonth = new Date(year, month, 1); // -2 because months are 0-based

                let now = new Date();
                let firstDay = nextMonth.toLocaleDateString('en-CA'); // YYYY-MM-DD format;
                let lastDay = new Date(nextMonth.getFullYear(), nextMonth.getMonth() + 1, 0).toLocaleDateString('en-CA').split("T")[0];

                $("#dateTimeFrom").val(firstDay);
                $("#dateTimeTo").val(lastDay);
            });

            /* ====================================================Init*/
            $("#dateTimeFrom").val(new Date().toISOString().split("T")[0])
            $("#dateTimeTo").val(new Date().toISOString().split("T")[0])

            $("#btnSearch").click(function (e) {
                event.preventDefault(); // Prevent full page reload

                postSearchMarginFormulas(1)
            });

            /*=================================================== Pagination*/
            $(document).on("click", "#btnGo", function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndexNew").val()

                postSearchMarginFormulas(pageNumber)
            });

            $(document).on("click", "#btnNext", function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndex").val() + 1

                postSearchMarginFormulas(pageNumber)
            });

            $(document).on("click", "#btnPrevious", function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndex").val() - 1

                postSearchMarginFormulas(pageNumber)
            });

            $(document).on("change", "#optionPageSize", function (e) {
                event.preventDefault(); // Prevent full page reload

                postSearchMarginFormulas(1)
            });

            function postSearchMarginFormulas(pageNumber) {

                const selectedDateType = $('input[name="dateType"]:checked').val();

                var requestData = {
                    Name: $("#FormulaName").val(),
                    Formula: $("#Formula").val(),

                    Type: $("#optionTypeSelections").val(),

                    CreatedBy: $("#CreatedBy").val(),
                    ModifiedBy: $("#ModifiedBy").val(),

                    SearchByDateType:
                        selectedDateType === 'AllDatetime' ? 1 :
                            selectedDateType === 'CreatedDate' ? 2 : 3,
                    IsSearchByCreatedDate: $('input[name="dateType"]:checked').val() == 'CreatedDate',
                    DateFrom: $("#dateTimeFrom").val(),
                    DateTo: $("#dateTimeTo").val(),
                    PageNumber: pageNumber, // Default to first page
                    PageSize: +$("#optionPageSize").val()
                };

                $.ajax({
                    url: "/MarginFormula/SearchMarginFormulas",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(requestData),
                    success: function (data) {
                        $("#pageIndex").val(pageNumber)
                        $("#results").html(data); // Update results dynamically
                    },
                    error: function (jqXHR) {
                        console.error("Error:", jqXHR.status);
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("search failed: " + jqXHR.status);
                        }
                    }
                });
            }

            /*-------------------------- Create */

            $(document).on("click", "#btnCreate", function (e) {
                e.preventDefault();
                $.get("/MarginFormula/Create")
                    .done(function (data, textStatus, jqXHR) {
                        $("#createModal .modal-content").html(data);
                        $("#createModal").modal("show");
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.log("Error:", jqXHR.status);  // Logs error status (e.g., 404, 500)
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("create failed: " + jqXHR.status);
                        }
                    });
            });

            $(document).on("submit", "#createForm", function (e) {
                e.preventDefault();

                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#createModal").modal("hide");

                            alert('success create');
                            postSearchMarginFormulas(1);
                        } else {
                            $("#createModal .modal-content").html(result);
                        }
                    },
                    error: function (jqXHR, status, error) {
                        console.error("Submission error: " + error);
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("create failed: " + jqXHR.status);
                        }
                    }
                });
            });

            /*-------------------------- Edit */
            $(document).on("click", ".btn-edit", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");

                // $.get("/MarginFormula/Edit", { id: entityId }, function (data) {
                //     $("#editModal .modal-content").html(data);
                //     $("#editModal").modal("show");
                // });

                $.get("/MarginFormula/Edit", { id: entityId })
                    .done(function (data) {
                        $("#editModal .modal-content").html(data);
                        $("#editModal").modal("show");
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Error fetching modal:", textStatus, errorThrown);
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("Edit failed: " + jqXHR.status);
                        }
                    });
            });

            $(document).on("submit", "#editForm", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#editModal").modal("hide");
                            alert('success edit');
                            postSearchMarginFormulas(1);

                        } else {
                            // Re-render the form with validation errors when needed
                            $("#editModal .modal-content").html(result);
                        }
                    },
                    error: function (jqXHR, status, error) {
                        console.error("Error updating the entity: " + error);
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("edit failed: " + jqXHR.status);
                        }
                    }
                });
            });

            /*-------------------------- Detail */
            $(document).on("click", ".btn-detail", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                // $.get("/MarginFormula/Details", { id: entityId }, function (data) {
                //     $("#detailModal .modal-content").html(data);
                //     $("#detailModal").modal("show");
                // });

                $.get("/MarginFormula/Details", { id: entityId })
                    .done(function (data) {
                        $("#detailModal .modal-content").html(data);
                        $("#detailModal").modal("show");
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Error fetching modal:", textStatus, errorThrown);
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("Details failed: " + jqXHR.status);
                        }
                    });
            });

            /*-------------------------- Delete */
            $(document).on("click", ".btn-delete", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                // $.get("/MarginFormula/Delete", { id: entityId }, function (data) {
                //     $("#deleteModal .modal-content").html(data);
                //     $("#deleteModal").modal("show");
                // });

                $.get("/MarginFormula/Delete", { id: entityId })
                    .done(function (data) {
                        $("#deleteModal .modal-content").html(data);
                        $("#deleteModal").modal("show");
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Error fetching modal:", textStatus, errorThrown);
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("Delete failed: " + jqXHR.status);
                        }
                    });
            });

            $(document).on("submit", "#deleteForm", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#deleteModal").modal("hide");
                            alert('success delete');
                            postSearchMarginFormulas(1);
                        } else {
                            $("#deleteModal .modal-content").html(result);
                        }
                    },
                    error: function (jqXHR, status, error) {
                        console.error("Error delete the entity: " + error);
                        if (jqXHR.status == 401) {
                            alert("Login token expired");
                            window.location.href = "/Login/Index";
                        }
                        else {
                            alert("delete failed: " + jqXHR.status);
                        }
                    }
                });
            });

            /*-------------------------- Clear */
            $(document).on("click", "#btnClear", function (e) {
                e.preventDefault();
                clearSearchFields();
            });

            function clearSearchFields() {
                $("#optionTypeSelections").val(0);
                $("#FormulaName").val('');
                $("#Formula").val('');
                $("#CreatedBy").val('');
                $("#ModifiedBy").val('');

                $('#allDatetime').prop('checked', true);

                $("#dateTimeFrom").val(new Date().toISOString().split("T")[0]);
                $("#dateTimeTo").val(new Date().toISOString().split("T")[0]);
            }

            postSearchMarginFormulas(1)
        });
    </script>
</div>
