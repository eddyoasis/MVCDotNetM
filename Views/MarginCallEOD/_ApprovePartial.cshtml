@model MarginCallViewModel

@using (Html.BeginForm("Approve", "MarginCallEOD", FormMethod.Post, new { id = "approveForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.PortfolioID)

    <div class="modal-header">
        <h5 class="modal-title">Details Margin Call</h5>
        <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
            <span>&times;</span>
        </button>
    </div>
    <div class="modal-body">
        <div class="form-group">
            <label asp-for="PortfolioID" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="PortfolioID" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="Percentages" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="Percentages" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="MarginCallAmount" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="MarginCallAmount" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="Day" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="Day" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="Collateral" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="Collateral" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="Collateral_Ccy" class="control-label"></label>
            <div class="col-md-10">
                <input type="text" asp-for="Collateral_Ccy" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="VM" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="VM" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="VM_Ccy" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="VM_Ccy" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="IM" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="IM" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="IM_Ccy" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="IM_Ccy" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="Remarks" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="Remarks" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="InsertedDatetime" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="InsertedDatetime" class="form-control" disabled />
            </div>
        </div>
        <div class="form-group mt-3">
            <label asp-for="EmailTemplateTitle" class="control-label"></label>
            <select id="EmailTemplateList" class="form-control">
                @foreach (var item in Model.EmailTemplateList)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
        </div>

        <div class="form-group mt-3">
            <label asp-for="EmailTemplateSubject" class="control-label"></label>
            <div class="col-md-10">
                <input asp-for="EmailTemplateSubject" class="form-control" />
            </div>
        </div>

        <div class="form-group mt-3">
            <label asp-for="EmailTemplateValue" class="control-label"></label>
            <textarea id="EmailTemplateValue" name="EmailTemplateValue" rows="8" class="form-control"></textarea>
        </div>

    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="submit" class="btn btn-success">Approve</button>
    </div>
}

<script>
    $(document).ready(function () {

        var marginCallModel = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));

        function parseTemplate(template, model) {
            return template.replace(/@@(\w+)/g, (_, key) => model[key] || `@@${key}`);
        }

        // Create a dictionary of text-to-value pairs
        const templateMap = @Html.Raw(Json.Serialize(
            Model.EmailTemplateList.ToDictionary(x => x.Text, x => x.Value)
            ));

        const dropdown = document.getElementById('EmailTemplateList');
        const textbox = document.getElementById('EmailTemplateValue');
        const textSubject = document.getElementById('EmailTemplateSubject');

        // Set initial textbox value
        textbox.value = templateMap[dropdown.options[dropdown.selectedIndex].text] || '';
        textSubject.value = dropdown.options[dropdown.selectedIndex].text || '';

        // Update on change
        $(document).on("change", "#EmailTemplateList", function (e) {
            const selectedText = this.options[this.selectedIndex].text;
            textbox.value = templateMap[selectedText] || '';

            const selectedSubject = this.options[this.selectedIndex].text;
            textSubject.value = selectedSubject || '';

            const template = textbox.value;
            const model = {
                PortfolioID: marginCallModel.PortfolioID,
                ccy: marginCallModel.VM_Ccy,
                Collateral: marginCallModel.Collateral,
                Percentages: marginCallModel.Percentages
            };
            const result = parseTemplate(template, model);
            textbox.value = result;

            const template2 = textSubject.value;
            const result2 = parseTemplate(template2, model);
            textSubject.value = result2;
        });

        $("#EmailTemplateList").trigger("change");
    });
</script>

@* <script>
    $(document).ready(function () {
        const values = @Html.Raw(Json.Serialize(Model.EmailTemplateValue));

        $(document).on("change", "#emailTitleDropdown", function (e) {
            const selectedIndex = this.value;
            const textbox = document.getElementById('EmailTemplateValue');
            textbox.value = values[selectedIndex] || '';
        });

        // Initialize textbox on page load
        document.getElementById('EmailTemplateValue').value = values[0] || '';
    });
</script> *@

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


}
