@model MarginCallSearchReq

@{
    ViewBag.Title = "Manage Margin Call(MTM)";
}

@section scripts {
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.css" />
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs5/dt-1.13.8/datatables.min.js"></script>

    <!-- jQuery & Bootstrap -->
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/smoothness/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- jQuery Validation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/additional-methods.min.js"></script>
}

<div class="container">
    <h2>@ViewBag.Title</h2>

    <hr> <!-- Divider -->
    <button id="btnShowHideSearch" type="submit" class="btn btn-primary">Open Filter</button>
    <hr> <!-- Divider -->

    <!-- Search Section -->
    <section id="searchSection" style="display: none;" class="p-4 border rounded bg-light shadow-sm">
        <h4>Search Margin Call</h4>

        <div class="d-flex flex-wrap gap-2">
            <div class="form-group mt-2">
                <label>PortfolioID</label>
                <input type="text" name="PortfolioID" id="PortfolioID" class="form-control" value="@Model?.PortfolioID" placeholder="Enter PortfolioID">
            </div>
            <div class="form-group mt-2">
                <label>Percentages(From)</label>
                <input type="number" name="PercentagesFrom" id="PercentagesFrom" class="form-control" value="@Model?.PercentagesFrom" placeholder="Enter Percentages(From)">
            </div>
            <div class="form-group mt-2">
                <label>Percentages(To)</label>
                <input type="number" name="PercentagesTo" id="PercentagesTo" class="form-control" value="@Model?.PercentagesTo" placeholder="Enter Percentages(To)">
            </div>
        </div>

        <div class="d-flex flex-wrap gap-2">
            <div class="form-group mt-2">
                <label>Collateral</label>
                <input type="number" name="Collateral" id="Collateral" class="form-control" value="@Model?.Collateral" placeholder="Enter Collateral">
            </div>
            <div class="form-group mt-2">
                <label>VM</label>
                <input type="number" name="VM" id="VM" class="form-control" value="@Model?.VM" placeholder="Enter VM">
            </div>
            <div class="form-group mt-2">
                <label>IM</label>
                <input type="number" name="IM" id="IM" class="form-control" value="@Model?.IM" placeholder="Enter IM">
            </div>
        </div>

        <div class="d-flex flex-wrap gap-2 d-none"> @*Hidden*@
            <div class="form-group mt-2">
                <label>Type</label>
                <input type="text" name="Type" id="Type" class="form-control" value="@Model?.Type" placeholder="Enter Type">
            </div>
            <div class="form-group mt-2">
                <label>Remarks</label>
                <input type="text" name="Remarks" id="Remarks" class="form-control" value="@Model?.Remarks" placeholder="Enter Remarks">
            </div>
        </div>

        <div class="d-flex flex-wrap gap-2 d-none"> @*Hidden*@
            <div class="form-group mt-2">
                <label class="mr-2">Collateral_Ccy</label>
                <select id="optionCollateral_Ccy" class="form-control" asp-items="@Model?.Collateral_Ccy">
                </select>
            </div>
            <div class="form-group mt-2">
                <label class="mr-2">VM_Ccy</label>
                <select id="optionVM_Ccy" class="form-control" asp-items="@Model?.VM_Ccy">
                </select>
            </div>
            <div class="form-group mt-2">
                <label class="mr-2">IM_Ccy</label>
                <select id="optionIM_Ccy" class="form-control" asp-items="@Model?.IM_Ccy">
                </select>
            </div>
        </div>

        @* <div class="d-flex flex-wrap gap-2">
            <div class="form-group mt-2">
                <label class="mr-2">MarginCallFlag</label>
                <select id="optionMarginCallFlag" class="form-control" asp-items="@Model?.MarginCallFlag">
                </select>
            </div>
            <div class="form-group mt-2">
                <label class="mr-2">EODTriggerFlag</label>
                <select id="optionEODTriggerFlag" class="form-control" asp-items="@Model?.EODTriggerFlag">
                </select>
            </div>
            <div class="form-group mt-2">
                <label class="mr-2">MTMTriggerFlag</label>
                <select id="optionMTMTriggerFlag" class="form-control" asp-items="@Model?.MTMTriggerFlag">
                </select>
            </div>
        </div> *@

        <div class="d-flex gap-1 mt-2 d-none"> @*Hidden*@
            <div class="form-group">
                <label>Select Date Type</label>
                <div class="d-flex gap-1">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="allDatetime" name="dateType" value="AllDatetime" checked>
                        <label class="form-check-label" for="allDatetime">All</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="insertedDatetime" name="dateType" value="InsertedDatetime">
                        <label class="form-check-label" for="insertedDatetime">Inserted Datetime</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="modifiedDatetime" name="dateType" value="ModifiedDatetime">
                        <label class="form-check-label" for="modifiedDatetime">Modified Datetime</label>
                    </div>
                </div>
            </div>
        </div>

        <div class="d-flex flex-wrap gap-1 mt-2 d-none"> @*Hidden*@
            <div class="form-group">
                <label>From Date</label>
                <input type="date" id="dateTimeFrom" class="form-control">
            </div>
            <div class="form-group">
                <label>To Date</label>
                <input type="date" id="dateTimeTo" class="form-control">
            </div>
            @* <div class="form-group ms-2 mt-4"> *@
            <div class="form-group ms-2 mt-4 d-flex flex-wrap gap-1">
                <button id="btnCurrentMonth" class="btn btn-primary">Current Month</button>
                <button id="btnPrevMonth" class="btn btn-primary">Prev Month</button>
                <button id="btnNextMonth" class="btn btn-primary">Next Month</button>
            </div>
        </div>

        <div class="d-flex gap-1 mt-2">
            <div>
                <label for="pageSize" class="mr-2">Items per page</label>
                <select id="optionPageSize" class="form-control">
                    @if (@Model.PageSize == 5)
                    {
                        <option value="5" selected>5</option>
                    }
                    else
                    {
                        <option value="5">5</option>
                    }

                    @if (@Model.PageSize == 10)
                    {
                        <option value="10" selected>10</option>
                    }
                    else
                    {
                        <option value="10">10</option>
                    }

                    @if (@Model.PageSize == 20)
                    {
                        <option value="20" selected>20</option>
                    }
                    else
                    {
                        <option value="20">20</option>
                    }

                    @if (@Model.PageSize == 50)
                    {
                        <option value="50" selected>50</option>
                    }
                    else
                    {
                        <option value="50">50</option>
                    }
                </select>

                <input type="hidden" id="pageIndex" value="@Model.PageNumber" />
                <input type="hidden" id="pageSize" value="@Model.PageSize" />
            </div>
        </div>

        <br />

        <div class="d-flex gap-2 mt-2">
            <button id="btnSearch" type="submit" class="btn btn-primary">Search</button>
            <button id="btnClear" class="btn btn-dark">Clear</button>
        </div>

    </section>

    <!-- Modal Container -->
    <div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
            </div>
        </div>
    </div>

    <hr> <!-- Divider -->

    <div class="d-flex flex-wrap gap-2">

        <section class="p-2 border rounded bg-white shadow-sm">
            <div class="form-group mt-2">
                <div class="d-flex gap-1">
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="marginModeAll" name="marginMode" value=1 checked>
                        <label class="form-check-label" for="marginModeAll">All</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="marginModeTriggered" name="marginMode" value=2>
                        <label class="form-check-label" for="marginModeTriggered">Triggered Today</label>
                    </div>
                </div>
            </div>
        </section>

        <section class="p-2 border rounded bg-white shadow-sm">

            <div class="d-flex flex-wrap gap-2">
                <div class="form-group mt-2">
                    <label>Order by</label>
                </div>
                <div class="form-group">
                    <select id="optionMarginCallOrderByColumns" class="form-control" asp-items="@Model?.MarginCallOrderByColumns">
                    </select>
                </div>
                <div class="form-group mt-2">
                    <div class="d-flex gap-1">
                        <div class="form-check">
                            <input class="form-check-input" type="radio" id="asc" name="oderByType" value=1 checked>
                            <label class="form-check-label" for="asc">Asc</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" id="desc" name="oderByType" value=2>
                            <label class="form-check-label" for="desc">Desc</label>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>

    <hr> <!-- Divider -->

    <section id="results" class="p-4 border rounded bg-white shadow-sm">
        <div id="results">
        </div>
    </section>

    <script>
        $(document).ready(function () {       
            /*-------------------------- margin mode */
            $(document).on("change", "#marginModeAll", function (e) {
                event.preventDefault();

                postSearchMarginCalls(1)
            });

            $(document).on("change", "#marginModeTriggered", function (e) {
                event.preventDefault();

                postSearchMarginCalls(1)
            });

            /*-------------------------- Order by changes */
            $(document).on("change", "#optionMarginCallOrderByColumns", function (e) {
                event.preventDefault();

                postSearchMarginCalls(1)
            });

            $(document).on("change", "#asc", function (e) {
                event.preventDefault();

                postSearchMarginCalls(1)
            });

            $(document).on("change", "#desc", function (e) {
                event.preventDefault();

                postSearchMarginCalls(1)
            });

            /*-------------------------- Show Hide Search */
            $(document).on("click", "#btnShowHideSearch", function (e) {

                $('#searchSection').toggle();

                // Optional: Change button text
                const isVisible = $('#searchSection').is(':visible');
                $(this).text(isVisible ? 'Hide Search Section' : 'Show Search Section');
            });

            /*-------------------------- Datetime selection */
            $(document).on("click", "#btnCurrentMonth", function (e) {

                let [year, month] = $("#dateTimeFrom").val().split("-");
                console.log(year);
                console.log(month);

                let previousMonth = new Date(year, month - 2, 1); // -2 because months are 0-based
                console.log(previousMonth);

                let now = new Date();
                let firstDay = new Date(now.getFullYear(), now.getMonth(), 1).toLocaleDateString('en-CA'); // YYYY-MM-DD format;
                let lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0).toLocaleDateString('en-CA');
                // let lastDay = new Date(now.getFullYear(), now.getMonth() + 1, 0).toISOString().split("T")[0];

                $("#dateTimeFrom").val(firstDay);
                $("#dateTimeTo").val(lastDay);
            });

            $(document).on("click", "#btnPrevMonth", function (e) {

                let [year, month] = $("#dateTimeFrom").val().split("-");
                let previousMonth = new Date(year, month - 2, 1); // -2 because months are 0-based

                let now = new Date();
                let firstDay = previousMonth.toLocaleDateString('en-CA'); // YYYY-MM-DD format;
                let lastDay = new Date(previousMonth.getFullYear(), previousMonth.getMonth() + 1, 0).toLocaleDateString('en-CA').split("T")[0];

                $("#dateTimeFrom").val(firstDay);
                $("#dateTimeTo").val(lastDay);
            });

            $(document).on("click", "#btnNextMonth", function (e) {

                let [year, month] = $("#dateTimeFrom").val().split("-");
                let nextMonth = new Date(year, month, 1); // -2 because months are 0-based

                console.log(nextMonth);

                let now = new Date();
                let firstDay = nextMonth.toLocaleDateString('en-CA'); // YYYY-MM-DD format;
                let lastDay = new Date(nextMonth.getFullYear(), nextMonth.getMonth() + 1, 0).toLocaleDateString('en-CA').split("T")[0];

                $("#dateTimeFrom").val(firstDay);
                $("#dateTimeTo").val(lastDay);
            });

            /* ====================================================Init*/
            $("#dateTimeFrom").val(new Date().toISOString().split("T")[0])
            $("#dateTimeTo").val(new Date().toISOString().split("T")[0])

            $("#btnSearch").click(function (e) {
                event.preventDefault(); // Prevent full page reload

                postSearchMarginCalls(1)
            });

            /*=================================================== Pagination*/
            $(document).on("click", "#btnGo", function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndexNew").val()

                postSearchMarginCalls(pageNumber)
            });

            $(document).on("click", "#btnNext", function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndex").val() + 1

                postSearchMarginCalls(pageNumber)

            });

            $(document).on("click", "#btnPrevious", function (e) {
                event.preventDefault(); // Prevent full page reload

                var pageNumber = +$("#pageIndex").val() - 1

                postSearchMarginCalls(pageNumber)
            });

            $(document).on("change", "#optionPageSize", function (e) {
                event.preventDefault(); // Prevent full page reload

                postSearchMarginCalls(1)
            });

            function postSearchMarginCalls(pageNumber) {

                const selectedDateType = $('input[name="dateType"]:checked').val();
                const selectedOderByType = $('input[name="oderByType"]:checked').val();
                const selectedMarginMode = $('input[name="marginMode"]:checked').val();

                var requestData = {
                    PortfolioID: $("#PortfolioID").val(),
                    PercentagesFrom: $("#PercentagesFrom").val() || 0,
                    PercentagesTo: $("#PercentagesTo").val() || 0,
                    Collateral: $("#Collateral").val() || 0,
                    Selected_Collateral_Ccy: $("#optionCollateral_Ccy").val(),
                    VM: $("#VM").val() || 0,
                    Selected_VM_Ccy: $("#optionVM_Ccy").val(),
                    IM: $("#IM").val() || 0,
                    Selected_IM_Ccy: $("#optionIM_Ccy").val(),
                    // SelectedMarginCallFlag: $("#optionMarginCallFlag").val(),
                    // SelectedEODTriggerFlag: $("#optionEODTriggerFlag").val(),
                    // SelectedMTMTriggerFlag: $("#optionMTMTriggerFlag").val(),
                    Type: $("#Type").val(),
                    Remarks: $("#Remarks").val(),

                    SearchByOrderByType: selectedOderByType,
                    Selected_MarginCallOrderByColumn: $("#optionMarginCallOrderByColumns").val(),

                    Selected_MarginMode: selectedMarginMode,

                    SearchByDateType:
                        selectedDateType === 'AllDatetime' ? 1 :
                            selectedDateType === 'InsertedDatetime' ? 2 : 3,
                    IsSearchByCreatedDate: $('input[name="dateType"]:checked').val() == 'CreatedDate',
                    IsSearchByCreatedDate: $('input[name="dateType"]:checked').val() == 'InsertedDatetime',
                    DateFrom: $("#dateTimeFrom").val(),
                    DateTo: $("#dateTimeTo").val(),
                    PageNumber: pageNumber, // Default to first page
                    PageSize: +$("#optionPageSize").val()
                };

                $.ajax({
                    url: "/MarginCallMTM/SearchMarginCalls",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(requestData),
                    success: function (data) {
                        $("#pageIndex").val(pageNumber)
                        $("#results").html(data); // Update results dynamically
                    },
                    error: function (jqXHR) {
                        console.error("Error:", jqXHR.status);
                        alert("Search failed. Please try again.");
                    }
                });
            }

            /*-------------------------- Approve */
            $(document).on("click", ".btn-approve", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/MarginCallMTM/Approve", { id: entityId }, function (data) {
                    $("#approveModal .modal-content").html(data);
                    $("#approveModal").modal("show");
                });
            });

            $(document).on("submit", "#approveForm", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#approveModal").modal("hide");
                            alert('success approve');
                            postSearchMarginCalls(1);
                        } else {
                            alert('approve failed');
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });

            /*-------------------------- Reject */
            $(document).on("click", ".btn-reject", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/MarginCallMTM/Reject", { id: entityId }, function (data) {
                    $("#rejectModal .modal-content").html(data);
                    $("#rejectModal").modal("show");
                });
            });

            $(document).on("submit", "#rejectForm", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#rejectModal").modal("hide");
                            alert('success reject');
                            postSearchMarginCalls(1);
                        } else {
                            $("#rejectModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });

            /*-------------------------- Create */
            $(document).on("click", "#btnCreate", function (e) {
                e.preventDefault();
                $.get("/EmailNotification/Create")
                    .done(function (data, textStatus, jqXHR) {
                        console.log("Success:", jqXHR.status);
                        $("#createModal .modal-content").html(data);
                        $("#createModal").modal("show");
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        console.log("Error:", jqXHR.status);
                        alert("Failed to load. Status: " + jqXHR.status);
                        window.location.href = "/Login/Index";
                    });
            });

            $(document).on("submit", "#createForm", function (e) {
                e.preventDefault();

                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            console.log(result);
                            $("#createModal").modal("hide");

                            alert('success create');
                            postSearchMarginCalls(1);
                        } else {
                            $("#createModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Submission error: " + error);
                        alert("Failed to load. Status: " + xhr.status);
                        window.location.href = "/Login/Index";
                    }
                });
            });

            /*-------------------------- Edit */
            $(document).on("click", ".btn-edit", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");

                $.get("/EmailNotification/Edit", { id: entityId }, function (data) {
                    $("#editModal .modal-content").html(data);
                    $("#editModal").modal("show");
                });
            });

            $(document).on("submit", "#editForm", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#editModal").modal("hide");
                            alert('success edit');
                            postSearchMarginCalls(1);

                        } else {
                            // Re-render the form with validation errors when needed
                            $("#editModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });

            /*-------------------------- Detail */
            $(document).on("click", ".btn-detail", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/MarginCallMTM/Details", { id: entityId }, function (data) {
                    $("#detailModal .modal-content").html(data);
                    $("#detailModal").modal("show");
                });
            });

            /*-------------------------- Delete */
            $(document).on("click", ".btn-delete", function (e) {
                e.preventDefault();
                var entityId = $(this).data("id");
                $.get("/EmailNotification/Delete", { id: entityId }, function (data) {
                    $("#deleteModal .modal-content").html(data);
                    $("#deleteModal").modal("show");
                });
            });

            $(document).on("submit", "#deleteForm", function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr("action"),
                    type: form.attr("method"),
                    data: form.serialize(),
                    success: function (result) {
                        if (result.success) {
                            $("#deleteModal").modal("hide");
                            alert('success delete');
                            postSearchMarginCalls(1);
                        } else {
                            $("#deleteModal .modal-content").html(result);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error updating the entity: " + error);
                    }
                });
            });

            /*-------------------------- Clear */
            $(document).on("click", "#btnClear", function (e) {
                e.preventDefault();
                clearSearchFields();
            });

            function clearSearchFields() {
                $("#PortfolioID").val('');
                $("#PercentagesFrom").val(0);
                $("#PercentagesTo").val(0);
                $("#Collateral").val(0);
                $("#Collateral").val(0);
                $("#optionCollateral_Ccy").val('All');
                $("#VM").val(0);
                $("#optionVM_Ccy").val('All');
                $("#IM").val(0);
                $("#optionIM_Ccy").val('All');
                $("#Type").val('');
                $("#Remarks").val('');

                $("#ModifiedBy").val('');
                $('#createdDate').prop('checked', true);

                // $("#dateTimeFrom").val(new Date().toISOString().split("T")[0]);
                // $("#dateTimeTo").val(new Date().toISOString().split("T")[0]);
            }

            //initial call
            $("#optionMarginCallFlag").val(2)
            postSearchMarginCalls(1);
        });
    </script>
</div>
